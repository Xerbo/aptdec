name: Build (release)

on:
  push:
    tags:
      - 'v*'

jobs:
  create_release:
    runs-on: ubuntu-latest
    needs: [ build_linux, build_windows ]

    steps:
    - name: Download TGZ package
      uses: actions/download-artifact@v3
      with:
        name: TGZ package

    - name: Download DEB package
      uses: actions/download-artifact@v3
      with:
        name: DEB package

    - name: Download ZIP package
      uses: actions/download-artifact@v3
      with:
        name: ZIP package

    - name: Test
      run: ls -la

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          aptdec_$GITHUB_REF_NAME.x86_64.tar.gz
          aptdec_$GITHUB_REF_NAME.x86_64.deb
          aptdec_$GITHUB_REF_NAME.amd64.zip

  build_linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    
    - name: Install dependencies
      run: sudo apt-get install cmake git gcc libsndfile-dev libpng-dev

    - name: Configure cmake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release

    - name: Build and package
      run: cmake --build build -j$(nproc) && cmake --build build --target package

    - name: Upload TGZ package
      uses: actions/upload-artifact@v3
      with:
          name: TGZ package
          path: build/aptdec/aptdec_*.tar.gz

    - name: Upload DEB package
      uses: actions/upload-artifact@v3
      with:
          name: Debian package
          path: build/aptdec/aptdec_*.deb

  build_windows:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    
    - name: Install dependencies
      run: sudo apt install cmake git mingw-w64 unzip

    - name: Run build script
      run: ./build_windows.sh $BUILD_TYPE

    - name: Upload ZIP package
      uses: actions/upload-artifact@v3
      with:
          name: ZIP package
          path: build/aptdec/aptdec_*.zip
